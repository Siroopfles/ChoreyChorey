import type { User, Task } from './types';

export const USERS: User[] = [
  { id: 'user-1', name: 'Alex', avatar: 'https://i.pravatar.cc/150?u=alex', points: 1250 },
  { id: 'user-2', name: 'Maria', avatar: 'https://i.pravatar.cc/150?u=maria', points: 980 },
  { id: 'user-3', name: 'David', avatar: 'https://i.pravatar.cc/150?u=david', points: 1520 },
  { id: 'user-4', name: 'Sarah', avatar: 'https://i.pravatar.cc/150?u=sarah', points: 750 },
  { id: 'user-5', name: 'Ken', avatar: 'https://i.pravatar.cc/150?u=ken', points: 1100 },
];

export const TASKS: Task[] = [
  {
    id: 'task-1',
    title: 'Design the new dashboard layout',
    description: 'Create a modern and intuitive design for the main dashboard, focusing on user experience.',
    status: 'To-do',
    priority: 'High',
    dueDate: new Date(new Date().setDate(new Date().getDate() + 3)),
    assigneeId: 'user-1',
    labels: ['Design'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 2)),
  },
  {
    id: 'task-2',
    title: 'Develop the authentication flow',
    description: 'Implement user sign-up, sign-in, and password reset functionalities.',
    status: 'In Progress',
    priority: 'High',
    dueDate: new Date(new Date().setDate(new Date().getDate() + 5)),
    assigneeId: 'user-2',
    labels: ['Feature'],
    subtasks: [
      { id: 'sub-1', text: 'Create UI for login page', completed: true },
      { id: 'sub-2', text: 'Set up Firebase Auth', completed: false },
    ],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 5)),
  },
  {
    id: 'task-3',
    title: 'Fix the bug in the reporting module',
    description: 'The monthly report is not generating the correct sales figures. Needs immediate attention.',
    status: 'In Progress',
    priority: 'Medium',
    dueDate: new Date(new Date().setDate(new Date().getDate() + 1)),
    assigneeId: 'user-3',
    labels: ['Bug'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 1)),
  },
  {
    id: 'task-4',
    title: 'Write API documentation for the new endpoint',
    description: 'Document the request/response structure for the /api/tasks endpoint.',
    status: 'To-do',
    priority: 'Low',
    dueDate: new Date(new Date().setDate(new Date().getDate() + 10)),
    assigneeId: 'user-4',
    labels: ['Documentation'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 3)),
  },
  {
    id: 'task-5',
    title: 'Refactor the database schema',
    description: 'Optimize the database schema for better performance and scalability.',
    status: 'Done',
    priority: 'High',
    dueDate: new Date(new Date().setDate(new Date().getDate() - 7)),
    assigneeId: 'user-1',
    labels: ['Refactor'],
    subtasks: [],
    attachments: [],
    isPrivate: true,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 14)),
    completedAt: new Date(new Date().setDate(new Date().getDate() - 6)),
  },
  {
    id: 'task-6',
    title: 'Set up CI/CD pipeline',
    description: 'Automate the build, test, and deployment process using GitHub Actions.',
    status: 'To-do',
    priority: 'Medium',
    dueDate: new Date(new Date().setDate(new Date().getDate() + 12)),
    assigneeId: 'user-5',
    labels: ['Feature'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 1)),
  },
  {
    id: 'task-7',
    title: 'User profile page design mockups',
    description: 'Create high-fidelity mockups for the user profile page.',
    status: 'Done',
    priority: 'Medium',
    dueDate: new Date(new Date().setDate(new Date().getDate() - 4)),
    assigneeId: 'user-1',
    labels: ['Design'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 8)),
    completedAt: new Date(new Date().setDate(new Date().getDate() - 3)),
  },
   {
    id: 'task-8',
    title: 'Update dependencies and resolve conflicts',
    description: 'Review and update all project dependencies to their latest stable versions.',
    status: 'Done',
    priority: 'Low',
    dueDate: new Date(new Date().setDate(new Date().getDate() - 10)),
    assigneeId: 'user-2',
    labels: ['Refactor'],
    subtasks: [],
    attachments: [],
    isPrivate: false,
    createdAt: new Date(new Date().setDate(new Date().getDate() - 12)),
    completedAt: new Date(new Date().setDate(new Date().getDate() - 9)),
  }
];
