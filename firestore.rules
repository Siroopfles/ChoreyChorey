rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(docId) {
      return request.auth.uid == docId;
    }

    function isOrgMember(orgId) {
      return request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.memberIds;
    }
    
    function isOrgOwner(orgId) {
      return request.auth.uid == get(/databases/$(database)/documents/organizations/$(orgId)).data.ownerId;
    }

    // Collection Rules
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isAuth();
    }

    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow create: if request.resource.data.ownerId == request.auth.uid && request.auth.uid in request.resource.data.memberIds;
      allow update: if isOrgOwner(orgId);
      allow delete: if isOrgOwner(orgId);
    }
    
    match /teams/{teamId} {
      allow read: if isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow update: if isOrgMember(resource.data.organizationId);
    }

    match /tasks/{taskId} {
      allow read: if isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId) && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /invites/{inviteId} {
      allow read: if isAuth();
      allow create: if isOrgMember(request.resource.data.organizationId) && request.resource.data.inviterId == request.auth.uid;
      allow update: if isAuth(); 
    }
    
    match /taskTemplates/{templateId} {
      allow read, delete: if isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId) && request.resource.data.creatorId == request.auth.uid;
      allow update: if isOrgMember(resource.data.organizationId);
    }
    
    match /notifications/{notificationId} {
      allow read, update, delete: if resource.data.userId == request.auth.uid;
      allow create: if isAuth();
    }
  }
}
