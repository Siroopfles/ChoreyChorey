
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      // A user can only update their own document.
      // The logic within the 'use server' action is trusted to be correct.
      allow update: if request.auth.uid == userId;
    }

    match /organizations/{orgId} {
      // Only members of an org can read or write to it.
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([orgId]);
      // A user can create an organization if they set themselves as the owner.
      allow create: if request.resource.data.ownerId == request.auth.uid;
    }

    match /teams/{teamId} {
      // To read/write a team, the user must be a member of the parent organization.
      // For create, check the incoming data. For others, check existing data.
      allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([resource.data.organizationId]);
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([request.resource.data.organizationId]);
    }

    match /tasks/{taskId} {
      function isParticipant() {
        return request.auth.uid == resource.data.creatorId || request.auth.uid == resource.data.assigneeId;
      }
      
      // To read/write a task, user must be in the org. If private, must be participant.
      allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([resource.data.organizationId])
                                  && (!resource.data.isPrivate || isParticipant());

      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([request.resource.data.organizationId]);
    }

    match /notifications/{notificationId} {
      // A user can read/write their own notifications
      allow read, write: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
