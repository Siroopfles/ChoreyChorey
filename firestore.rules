
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USERS
    // A user can read, create, and update their own document.
    match /users/{userId} {
      allow read, create, update: if request.auth.uid == userId;
    }
    
    // ORGANIZATIONS
    // A user can create an organization if they set themselves as the owner.
    // A user can read/update an organization if their user ID is in the organizationIds list of their own user document.
    match /organizations/{orgId} {
      allow create: if request.resource.data.ownerId == request.auth.uid;
      allow read, update: if orgId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds;
    }
    
    // TEAMS
    // A user can read/write a team if they are a member of the parent organization.
    match /teams/{teamId} {
      function getParentOrgId() {
        return get(/databases/$(database)/documents/teams/$(teamId)).data.organizationId;
      }
      allow read, write: if getParentOrgId() in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds;
    }
    
    // TASKS
    // A user can read/write a task if they are a member of the parent organization.
    match /tasks/{taskId} {
      function getParentOrgId() {
        return get(/databases/$(database)/documents/tasks/$(taskId)).data.organizationId;
      }
       allow read, write: if getParentOrgId() in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds;
    }
    
    // NOTIFICATIONS
    // Users can create notifications for others.
    // Users can only read/write their own notifications.
    match /notifications/{notificationId} {
      allow create: if request.auth.uid != null;
      allow read, write: if resource.data.userId == request.auth.uid;
    }
  }
}
