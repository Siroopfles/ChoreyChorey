
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // A user can create their own document on signup
      allow create: if request.auth.uid == userId;
      // A user can read their own document
      allow read: if request.auth.uid == userId;
      // A user can update their own document.
      // The transaction logic on the client ensures this is done safely.
      allow update: if request.auth.uid == userId;
    }

    match /organizations/{orgId} {
      // A user can create an organization if they are authenticated and set themselves as owner.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
      // A user can read an organization if they are a member (checked via their user document).
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([orgId]);
    }

    match /teams/{teamId} {
      function getOrgId() {
        // For reads, check the existing resource. For writes, check the incoming resource.
        return request.method == 'get' ? resource.data.organizationId : request.resource.data.organizationId;
      }
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([getOrgId()]);
    }

    match /tasks/{taskId} {
       function getOrgId() {
        return request.method == 'get' ? resource.data.organizationId : request.resource.data.organizationId;
      }
       allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationIds.hasAny([getOrgId()]);
    }

    match /notifications/{notificationId} {
      function getUserId() {
         return request.method == 'get' ? resource.data.userId : request.resource.data.userId;
      }
      allow read, write: if request.auth.uid == getUserId();
    }
  }
}

    