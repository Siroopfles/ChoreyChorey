rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requesting user is a member of the given organization.
    function isOrgMember(orgId) {
      return request.auth != null 
             && exists(/databases/$(database)/documents/organizations/$(orgId))
             && request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.members;
    }
    
    // Helper function to check if the requesting user is the owner of the organization.
    function isOwner(orgId) {
       return request.auth != null 
              && get(/databases/$(database)/documents/organizations/$(orgId)).data.ownerId == request.auth.uid;
    }

    // Rules for each collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /organizations/{orgId} {
      // A user can read an organization document IF their UID is a key in its 'members' map.
      // This is non-recursive and the key to fixing the permission denied error loop.
      allow read: if request.auth.uid in resource.data.members;
      
      // Only the owner can write to the top-level organization document.
      allow update: if isOwner(orgId);

      // Create is handled by the backend function which sets the owner correctly.
      allow create: if request.auth.uid == request.resource.data.ownerId;
    }

    match /tasks/{taskId} {
      // To create a task, you must be a member of the organization specified in the NEW task data.
      allow create: if isOrgMember(request.resource.data.organizationId);

      // To read/update/delete a task, you must be a member of the organization it belongs to.
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /projects/{projectId} {
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }
    
    match /teams/{teamId} {
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /invites/{inviteId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null;
    }
    
    match /taskTemplates/{templateId} {
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /checklistTemplates/{templateId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }
    
    match /automations/{automationId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }
    
    match /scheduledReports/{scheduleId} {
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /apiKeys/{keyId} {
      allow create: if isOrgMember(request.resource.data.organizationId);
      allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /webhooks/{webhookId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /aiFeedback/{feedbackId} {
      allow create: if request.auth != null;
    }
    
    match /personalGoals/{goalId} {
       allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /teamChallenges/{challengeId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read, update, delete: if isOrgMember(resource.data.organizationId);
    }

    match /ideas/{ideaId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read, update: if isOrgMember(resource.data.organizationId);
    }

    match /notifications/{notificationId} {
       allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /activityFeed/{feedItemId} {
       allow create: if isOrgMember(request.resource.data.organizationId);
       allow read: if isOrgMember(resource.data.organizationId);
    }

    match /presence/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
  }
}