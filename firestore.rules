
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOrgOwner(orgId) {
      return get(/databases/$(database)/documents/organizations/$(orgId)).data.ownerId == request.auth.uid;
    }
    
    function isOrgAdmin(orgId) {
      // Use .get() to safely access role, prevents error if member doesn't exist
      return get(/databases/$(database)/documents/organizations/$(orgId)).data.members.get(request.auth.uid, {}).role == 'Admin';
    }

    function isOrgMember(orgId) {
      return request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.members;
    }

    function isJoiningOrg(request, resource) {
        // Is the user updating the members map?
        let isModifyingMembers = request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']);
        // Is the user adding only themselves?
        let isAddingSelf = request.resource.data.members.diff(resource.data.members).addedKeys().hasOnly([request.auth.uid]);
        // Is the user not already a member?
        let isNotAlreadyMember = !(request.auth.uid in resource.data.members);

        return isModifyingMembers && isAddingSelf && isNotAlreadyMember;
    }

    match /users/{userId} {
      allow read;
      allow create;
      allow update: if request.auth.uid == userId;
    }

    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update: if isOrgOwner(orgId) || isOrgAdmin(orgId) || isJoiningOrg(request, resource);
    }

    match /invites/{inviteId} {
      allow read;
      allow create: if request.auth != null
                    && request.resource.data.inviterId == request.auth.uid;
      allow update: if request.auth != null
                    && resource.data.status == 'pending'
                    && request.resource.data.status == 'accepted';
    }
    
    match /teams/{teamId} {
      // Team data contains organizationId
      allow read, write: if isOrgMember(request.resource.data.organizationId);
    }
    
    match /taskTemplates/{templateId} {
      allow read, write: if isOrgMember(request.resource.data.organizationId);
    }

    match /tasks/{taskId} {
      allow read, write: if isOrgMember(request.resource.data.organizationId);
    }
    
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}
