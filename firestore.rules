
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    
    function isSignedIn() {
      return request.auth != null;
    }

    function getRequestingUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    function isOrgMember(orgId) {
      let userDoc = getRequestingUser();
      return isSignedIn()
             && exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && 'organizationIds' in userDoc.data
             && userDoc.data.organizationIds is list
             && orgId in userDoc.data.organizationIds;
    }

    function isOrgOwner(orgId) {
        let orgDoc = get(/databases/$(database)/documents/organizations/$(orgId));
        return isSignedIn() && orgDoc.data.ownerId == request.auth.uid;
    }

    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if request.auth.uid == userId;
    }

    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if isOrgOwner(orgId);
    }
    
    match /teams/{teamId} {
      allow read, write: if isOrgMember(get(/databases/$(database)/documents/teams/$(teamId)).data.organizationId);
    }

    match /tasks/{taskId} {
      allow read: if isOrgMember(resource.data.organizationId);
      allow create: if isOrgMember(request.resource.data.organizationId)
                      && request.auth.uid == request.resource.data.creatorId;
      allow update: if isOrgMember(resource.data.organizationId);
      allow delete: if isOrgMember(resource.data.organizationId);
    }
    
    match /taskTemplates/{templateId} {
       allow read: if isOrgMember(get(/databases/$(database)/documents/taskTemplates/$(templateId)).data.organizationId);
       allow create: if isOrgMember(request.resource.data.organizationId)
                       && request.auth.uid == request.resource.data.creatorId;
       allow update, delete: if isOrgMember(get(/databases/$(database)/documents/taskTemplates/$(templateId)).data.organizationId)
                               && request.auth.uid == get(/databases/$(database)/documents/taskTemplates/$(templateId)).data.creatorId;
    }
    
    match /invites/{inviteId} {
      allow read: if true; 
      allow create: if isOrgMember(request.resource.data.organizationId) && request.auth.uid == request.resource.data.inviterId;
      allow update: if isSignedIn() && resource.data.status == 'pending' && request.resource.data.status == 'accepted';
    }

    match /notifications/{notificationId} {
      allow read, write, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }
  }
}
